C51 COMPILER V9.00   SEG                                                                   04/12/2023 19:50:57 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN SEG.OBJ
COMPILER INVOKED BY: D:\soft\Keil\C51\BIN\C51.EXE SEG.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "SEG.h"
   2          
   3          unsigned char print_char_list[8]; // 显示字符列表
   4          unsigned char print_code_list[8]; // 显示码列表
   5          
   6          // 逻辑值-显示值映射
   7          code unsigned char KEY_VALUE_MAP[] = {
   8          '0',0xc0,'1',0xf9,'2',0xa4,'3',0xb0,
   9          '4',0x99,'5',0x92,'6',0x82,'7',0xf8,
  10          '8',0x80,'9',0x90,'-',0xbf,' ',0xff
  11          };                                              
  12          
  13          void mapping(unsigned char * print_char_list, unsigned char * print_code_list) {
  14   1              unsigned char i,j,k = 0;
  15   1          for (i = 0; i < 8; i++, k++) {
  16   2                  for (j = 0; j < 12; j++) {
  17   3                          if (print_char_list[k] == KEY_VALUE_MAP[j * 2]) {
  18   4                                  print_code_list[i] = KEY_VALUE_MAP[j * 2 + 1];
  19   4                                      break;
  20   4                              }
  21   3                      }
  22   2                      if (print_char_list[k + 1] == '.') {
  23   3                          print_code_list[i] = print_code_list[i] & 0x7f;
  24   3                              k++;
  25   3                      }
  26   2              }
  27   1      
  28   1      }
  29          
  30          void show(unsigned char * print_code_list) {
  31   1          static unsigned char i = 0,x = 0xfe;
  32   1              unsigned int j;
  33   1              P2 = 0xff;
  34   1              P2 = print_code_list[i];
  35   1              P0 = x;
  36   1              x = _crol_(x,1);
  37   1              for (j = 0; j < 500; j++);
  38   1              i++;
  39   1              if (i == 8) {
  40   2                  i = 0;
  41   2              }
  42   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    186    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
