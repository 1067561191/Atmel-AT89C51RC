C51 COMPILER V9.00   1                                                                     03/22/2023 19:51:01 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 1
OBJECT MODULE PLACED IN 1.OBJ
COMPILER INVOKED BY: D:\soft\Keil\C51\BIN\C51.EXE 1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          
   4          #define uchar unsigned char
   5          
   6          /*
   7          code uchar KEYVALUEARR[] = {
   8          0x7e,'0',0xbe,'1',0xde,'2',0xee,'3',
   9          0x7d,'4',0xbd,'5',0xdd,'6',0xed,'7',
  10          0x7b,'8',0xbb,'9',0xdb,'.',0xeb,'+',
  11          0x77,'-',0xb7,'*',0xd7,'/',0xe7,'='
  12          };
  13          */
  14          
  15          code uchar KEYVALUEARR2[] = {
  16          0xc0,0xf9,0xa4,0xb0,
  17          0x99,0x92,0x82,0xf8,
  18          0x80,0x90,0x7f,0x7f,
  19          0x7f,0x7f,0x7f,0x7f
  20          };
  21          
  22          /*return 0-15定义值*/
  23          uchar KeyScan() {
  24   1          uchar x;
  25   1          P3 = 0x0f;
  26   1              if (P3 != 0x0f) {
  27   2                  switch (P3) {
  28   3                          case 0x0e : {
  29   4                                  x = 0;
  30   4                                      break;
  31   4                              }
  32   3                              case 0x0d : {
  33   4                                  x = 1;
  34   4                                      break;
  35   4                              }
  36   3                              case 0x0b : {
  37   4                                  x = 2;
  38   4                                      break;
  39   4                              }
  40   3                              case 0x07 : {
  41   4                                  x = 3;
  42   4                                      break;
  43   4                              }
  44   3                              default : {
  45   4                                  break;
  46   4                              }
  47   3                      }
  48   2                      P3 = 0xf0;
  49   2                      if (P3 != 0xf0) {
  50   3                          switch (P3) {
  51   4                                  case 0x70 : {
  52   5                                          return 4*x+0;
  53   5                                      }
  54   4                                      case 0xb0 : {
  55   5                                          return 4*x+1;
C51 COMPILER V9.00   1                                                                     03/22/2023 19:51:01 PAGE 2   

  56   5                                      }
  57   4                                      case 0xd0 : {
  58   5                                          return 4*x+2;
  59   5                                      }
  60   4                                      case 0xe0 : {
  61   5                                          return 4*x+3;
  62   5                                      }
  63   4                                      
  64   4                              }
  65   3                      }
  66   2              }
  67   1              return 0xff;
  68   1      /*
  69   1              unsigned char i;
  70   1              unsigned char a = 0xfe;                 // 1111 1110 
  71   1              for (i = 0; i < 4; i++) {               // 按行检测 先检测S0-S3 第一行
  72   1                      P3 = a;
  73   1                      if (P3 != a) {                          // 检测到了
  74   1                              return P3;
  75   1                      }
  76   1                      a = _crol_(a, 1);                       // 再检测S4-S7 第二行 再检测S8-S11 第三行 再检测S12-S15 第四行
  77   1              }
  78   1              return 0xff;                                    // 默认返回全部高电平
  79   1      */
  80   1      }
  81          
  82          
  83          int main() {
  84   1          uchar key_value,now;
  85   1              uchar old = 0xff;
  86   1              while(1) {
  87   2                  key_value = KeyScan();          // 键值
  88   2                      
  89   2                      now = KEYVALUEARR2[key_value];// 展示值
  90   2                      
  91   2                      if(old != now) { // 发生跳变
  92   3                          if (old == (old & now)) { // 下沿跳变
  93   4                                  
  94   4                              } else { // 上沿跳变 
  95   4                                  P2 = old;
  96   4                              }         
  97   3                      }
  98   2                      old = now;
  99   2              }
 100   1              return 0;
 101   1      }
 102          
 103          /*
 104          S0              0111 1110               7e
 105          S1              1011 1110               be
 106          S2              1101 1110               de
 107          S3              1110 1110               ee
 108          S4              0111 1101               7d
 109          S5              1011 1101               bd
 110          S6              1101 1101               dd
 111          S7              1110 1101               ed
 112          S8              0111 1011               7b
 113          S9              1011 1011               bb
 114          S10             1101 1011               db
 115          S11             1110 1011               eb
 116          S12             0111 0111               77
 117          S13             1011 0111               b7
C51 COMPILER V9.00   1                                                                     03/22/2023 19:51:01 PAGE 3   

 118          S14             1101 0111               d7
 119          S15             1110 0111               e7
 120          
 121          0               abcd ef                 1100 0000
 122          1       bc                              1111 1001
 123          2       abd eg                  1010 0100
 124          3               abcd g                  1011 0000
 125          4               bc fg                   1001 1001
 126          5               acd fg                  1001 0010
 127          6               acd efg                 1000 0010
 128          7               abc                             1111 1000
 129          8               abcd edf                1000 0000
 130          9               abcd fg                 1001 0000
 131          
 132          @author:cming0420@gmail.com
 133          @date:2023-3-16
 134          @description:Matrix key control lighting effect for C51 SCM
 135          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
